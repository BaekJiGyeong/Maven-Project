<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PcDAO">
	<select id="getEduListByMember" parameterType="MemberVO" resultType="EducationVO">
		SELECT	E_I.EDU_ID educationId
				, EDU_CTGR educationCategory
				, EDU_TTL educationTitle
				, E_I.MBR_ID memberId 
				, MAX_MBR maxMember
				, EDU_LOC educationLocation
				, EDU_CLCM educationCurriculum
				, EDU_INTR educationIntroduce
				, SRT_DATE startDate
				, END_DATE endDate
				, START_TM startTime
				, END_TM endTime
				, EDU_TP educationType
				, COST cost
		FROM	EDU_INFO E_I, EDU_CLASS E_C
		WHERE   E_I.EDU_ID = E_C.EDU_ID
		AND		E_C.MBR_ID = #{id}
	</select>
	<select id="getEduListExceptUsed" parameterType="MemberVO" resultType="EducationVO">
		SELECT	E_I.EDU_ID educationId
		        , EDU_CTGR educationCategory
		        , EDU_TTL educationTitle
		        , E_I.MBR_ID memberId 
		        , MAX_MBR maxMember
		        , EDU_LOC educationLocation
		        , EDU_CLCM educationCurriculum
		        , EDU_INTR educationIntroduce
		        , SRT_DATE startDate
		        , END_DATE endDate
		        , START_TM startTime
		        , END_TM endTime
		        , EDU_TP educationType
		        , COST cost
		FROM	EDU_INFO E_I, EDU_CLASS E_C
		WHERE   E_I.EDU_ID = E_C.EDU_ID
		AND		E_C.MBR_ID = #{id}
		AND     E_I.EDU_ID NOT IN (
		                            SELECT  EI.EDU_ID educationId
		                            FROM    USED_PC UP
		                                    , EDU_INFO EI
		                                    , PC
		                            WHERE   UP.EDU_ID = EI.EDU_ID
		                            AND     UP.PC_ID = PC.PC_ID
		                            AND     UP.MBR_ID= #{id}
		                            )
	</select>
	<select id="getUsedPcListByMember" parameterType="MemberVO" resultType="UsedPcVO">
		SELECT  PC.PC_ID pcId
		        , PC.IP ip
		        , EI.EDU_ID educationId
		        , EI.EDU_TTL educationTitle
		        , EI.EDU_LOC educationLocation
		        , UP.USED_PC_ID usedPC
		FROM    USED_PC UP
		        , EDU_INFO EI
		        , PC
		WHERE   UP.EDU_ID = EI.EDU_ID
		AND     UP.PC_ID = PC.PC_ID
		AND     UP.MBR_ID=#{id}
	</select>
	<select id="getPcIdByIp" parameterType="string" resultType="string">
		SELECT  PC_ID
		FROM    PC
		WHERE   IP = #{pcIp}	
	</select>
	<select id="getEducationIdByTitle" parameterType="string" resultType="string">
		SELECT  EDU_ID
		FROM    EDU_INFO
		WHERE   EDU_TTL = #{educationTitle}
	</select>
	<insert id="doRegisterMyPc" parameterType="UsedPcVO">
		INSERT INTO USED_PC (
		                       USED_PC_ID
		                       , PC_ID
		                       , EDU_ID
		                       , MBR_ID) 
		VALUES              ( 
		                        USED_PC_ID_SEQ.NEXTVAL
		                        , #{pcId}
		                        , #{educationId}
		                        , #{memberId}
		                    )
	</insert>
	<delete id="doDeleteMyPc" parameterType="string">
		DELETE	
		FROM	USED_PC
		WHERE	USED_PC_ID = #{pcId}
	</delete>
</mapper>