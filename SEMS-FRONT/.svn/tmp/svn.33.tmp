package com.ktds.sems.pc.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.web.servlet.ModelAndView;

import com.ktds.sems.common.Session;
import com.ktds.sems.education.vo.EducationVO;
import com.ktds.sems.member.vo.MemberVO;
import com.ktds.sems.pc.biz.PcBiz;
import com.ktds.sems.pc.service.PcService;
import com.ktds.sems.pc.vo.UsedPcVO;

import kr.co.hucloud.utilities.web.AjaxUtil;

public class PcServiceImpl implements PcService{

	private PcBiz pcBiz;

	public void setPcBiz(PcBiz pcBiz) {
		this.pcBiz = pcBiz;
	}

	@Override
	public ModelAndView viewMyPcPage(HttpSession session, HttpServletRequest request) {
		MemberVO memberVO = (MemberVO) session.getAttribute(Session.MEMBER);
		List<UsedPcVO> usedPcList = pcBiz.getUsedPcListByMember(memberVO);
		List<EducationVO> eduListExceptUsed = pcBiz.getEduListExceptUsed(memberVO);
		String myPcIp= request.getRemoteHost();
		
		ModelAndView view = new ModelAndView();
		view.setViewName("myPage/pc/myPc");
		view.addObject("usedPcList", usedPcList);
		view.addObject("eduListByMember", eduListExceptUsed);
		view.addObject("myPcIp", myPcIp);
		return view;
	}

	@Override
	public void getEduLocationById(String educationId, HttpServletResponse response, HttpSession session) {
		String location = "";
		MemberVO memberVO = (MemberVO) session.getAttribute(Session.MEMBER);
		List<EducationVO> eduListByMember = pcBiz.getEduListByMember(memberVO);
		for (EducationVO educationVO : eduListByMember) {
			if(educationVO.getEducationId().equals(educationId)){
				location = educationVO.getEducationLocation();
			}
		}
		AjaxUtil.sendResponse(response, location);
		return;
	}

	@Override
	public String doRegisterMyPc(String educationId, String eduLocation, String usedPcIp, HttpSession session) {
		MemberVO memberVO = (MemberVO) session.getAttribute(Session.MEMBER);
		
		String pcId = pcBiz.getPcIdByIp(usedPcIp);
		if ( pcId == null ){
			
			return "FAIL";
		}
		
		else {
			String memberId = memberVO.getId();
			
			UsedPcVO usedPcVO = new UsedPcVO();
			usedPcVO.setPcId(pcId);
			usedPcVO.setEducationId(educationId);
			usedPcVO.setMemberId(memberId);
			
			boolean data = pcBiz.doRegisterMyPc(usedPcVO) > 0;

			System.out.println("biz로감");
			
			if (!data) {
				return "FAIL";
			}
			return "OK";
		}
	}

	@Override
	public String doDeleteMyPc(String pcId) {
		pcBiz.doDeleteMyPc(pcId);
		return "redirect:/member/myPc";
	}
	
}
